{"version":3,"file":"assets/js/settings.js","mappings":";;;;;AAAA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AC7HoE;AACpE;AACA,YAAY;AACZ,UAAU;AACV,cAAc,E","sources":["webpack://webpack-html-scss-boilerplate/./src/assets/scripts/helpers.js","webpack://webpack-html-scss-boilerplate/./src/assets/scripts/settings.js"],"sourcesContent":["\r\nexport function grubScrolling(className, opt) {\r\n  const slider = document.querySelector(className);\r\n\r\n  if (!slider) return;\r\n\r\n  let isDown = false;\r\n  let startX;\r\n  let scrollLeft;\r\n\r\n  slider.addEventListener('mousedown', (e) => {\r\n    isDown = true;\r\n    startX = e.pageX - slider.offsetLeft;\r\n    scrollLeft = slider.scrollLeft;\r\n  });\r\n  slider.addEventListener('mouseleave', () => {\r\n    isDown = false;\r\n  });\r\n  slider.addEventListener('mouseup', () => {\r\n    isDown = false;\r\n  });\r\n  slider.addEventListener('mousemove', (e) => {\r\n    if (!isDown) return;\r\n    e.preventDefault();\r\n    const x = e.pageX - slider.offsetLeft;\r\n    const walk = (x - startX) * 3;\r\n    slider.scrollLeft = scrollLeft - walk;\r\n  });\r\n\r\n  if (opt) {\r\n    const btnLeft = document.querySelector(opt.left)\r\n    const btnRight = document.querySelector(opt.right)\r\n\r\n    btnLeft.addEventListener('click', () => {\r\n      const newVal = slider.scrollLeft - 300\r\n      slider.scroll({\r\n        left: newVal > 0 ? newVal : 0,\r\n        behavior: 'smooth'\r\n      })\r\n    })\r\n\r\n    btnRight.addEventListener('click', () => {\r\n      const newVal = slider.scrollLeft + 300\r\n      slider.scroll({\r\n        left: newVal < slider.scrollWidth ? newVal : slider.scrollWidth,\r\n        behavior: 'smooth'\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport function tabHandler() {\r\n  const tabs = document.querySelectorAll('[data-role=\"tab\"]')\r\n  const tabBodies = document.querySelectorAll('[data-role=\"tab-body\"]')\r\n\r\n  tabs.forEach((tab) => {\r\n    tab.addEventListener('click', (e) => {\r\n      tabs.forEach((e) => {\r\n        if (e.dataset.type === tab.dataset.type && e.classList.contains('active')) {\r\n          e.classList.remove('active')\r\n        }\r\n      })\r\n      tab.classList.add('active')\r\n      tabBodies.forEach((tabBody) => {\r\n        if (tabBody.dataset.type === tab.dataset.type) {\r\n          if (tabBody.classList.contains('active')) {\r\n            tabBody.classList.remove('active')\r\n          }\r\n          if (tabBody.dataset.index === tab.dataset.index) {\r\n            tabBody.classList.add('active')\r\n          }\r\n        }\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\nexport function customSelect() {\r\n  const customSelects = document.querySelectorAll('.selector')\r\n\r\n  customSelects.forEach((customSelect) => {\r\n    const customSelectInput = customSelect.querySelector('.selector__label')\r\n    const input = customSelectInput.querySelector('input')\r\n\r\n    customSelectInput.addEventListener('click', (e) => {\r\n      e.preventDefault()\r\n      customSelect.classList.toggle('selector--active')\r\n    })\r\n\r\n    customSelect.addEventListener('click', (e) => {\r\n      const isOption = e.target.closest('.selector__item')\r\n      if (isOption) {\r\n        input.value = isOption.dataset.value\r\n        customSelect.classList.add('selector--valued')\r\n        customSelect.classList.remove('selector--active')\r\n      }\r\n    })\r\n\r\n    document.addEventListener('click', (e) => {\r\n      const isSelect = e.target.closest('.selector')\r\n\r\n      if ((!isSelect || isSelect !== customSelect) && customSelect.classList.contains('selector--active')) {\r\n        customSelect.classList.remove('selector--active')\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nexport function customPassword() {\r\n  const customSelects = document.querySelectorAll('.password')\r\n\r\n  customSelects.forEach((customSelect) => {\r\n    const passwordInput = customSelect.querySelector('input')\r\n    const passwordControl = customSelect.querySelector('.password__control')\r\n\r\n    passwordControl.addEventListener('click', (e) => {\r\n      if (customSelect.classList.contains('password--viewed')) {\r\n        customSelect.classList.remove('password--viewed')\r\n        passwordInput.type = 'password'\r\n      } else {\r\n        customSelect.classList.add('password--viewed')\r\n        passwordInput.type = 'text'\r\n      }\r\n    })\r\n  })\r\n}","import { customSelect, tabHandler, customPassword } from './helpers'\r\n\r\ncustomSelect()\r\ntabHandler()\r\ncustomPassword()"],"names":[],"sourceRoot":""}